import { OutputGeneratorContext } from './outputGeneratorTypes.js';

const PLAIN_SEPARATOR = '='.repeat(16);
const PLAIN_LONG_SEPARATOR = '='.repeat(64);

export const generatePlainStyle = (data: OutputGeneratorContext): string => {
  const { generationDate, treeString, processedFiles, config, projectInstruction } = data;

  let output = `${PLAIN_LONG_SEPARATOR}
Repopack Output File
${PLAIN_LONG_SEPARATOR}

This file was generated by Repopack on: ${generationDate}

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Repository structure
3. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the separators and "File:" markers to
  distinguish between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
${config.output.headerText ? '- Pay special attention to the Project Summary. These contain important context and guidelines specific to this project.' : ''}
${projectInstruction ? '- Pay special attention to the Project Instruction. These contain important context and guidelines specific to this project.' : ''}

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.
${config.output.removeComments ? '- Code comments have been removed.\n' : ''}
${config.output.showLineNumbers ? '- Line numbers have been added to the beginning of each line.\n' : ''}

For more information about Repopack, visit: https://github.com/yamadashy/repopack

`;

  if (config.output.headerText) {
    output += `Project Summary:
--------------------------------
${config.output.headerText}

`;
  }

  if (projectInstruction) {
    output += `Project Instruction:
---------------------------------------
${projectInstruction}

`;
  }

  output += `${PLAIN_LONG_SEPARATOR}
Repository Structure
${PLAIN_LONG_SEPARATOR}
${treeString}

${PLAIN_LONG_SEPARATOR}
Repository Files
${PLAIN_LONG_SEPARATOR}

`;

  for (const file of processedFiles) {
    output += `${PLAIN_SEPARATOR}
File: ${file.path}
${PLAIN_SEPARATOR}
${file.content}

`;
  }

  return output.trim() + '\n';
};
